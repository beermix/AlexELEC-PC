diff -Naurp emulationstation-76c1538/es-app/src/guis/GuiMenu.cpp emulationstation-76c1538-patch/es-app/src/guis/GuiMenu.cpp
--- emulationstation-76c1538/es-app/src/guis/GuiMenu.cpp	2016-07-24 14:04:51.000000000 +0300
+++ emulationstation-76c1538-patch/es-app/src/guis/GuiMenu.cpp	2016-07-24 13:45:52.000000000 +0300
@@ -209,8 +209,33 @@ GuiMenu::GuiMenu(Window* window) : GuiCo
 			mWindow->pushGui(new GuiDetectDevice(mWindow, false, nullptr));
 	});
 
+	addEntry("RETROARCH", 0x777777FF, true, 
+		[this] {
+						runSystemCommand("systemctl start retroarch.service");
+						SDL_Event ev;
+						ev.type = SDL_QUIT;
+						SDL_PushEvent(&ev);
+	});
+
+	addEntry("REBOOT", 0x777777FF, true, 
+		[this] {
+						SDL_Event ev;
+						ev.type = SDL_QUIT;
+						SDL_PushEvent(&ev);
+						runRestartCommand();
+	});
+
+	addEntry("SHUTDOWN", 0x777777FF, true, 
+		[this] {
+						SDL_Event ev;
+						ev.type = SDL_QUIT;
+						SDL_PushEvent(&ev);
+						runShutdownCommand();
+	});
+
 	addEntry("QUIT", 0x777777FF, true, 
 		[this] {
+						runSystemCommand("systemctl start kodi.service");
 						SDL_Event ev;
 						ev.type = SDL_QUIT;
 						SDL_PushEvent(&ev);
diff -Naurp emulationstation-76c1538/es-app/src/main.cpp emulationstation-76c1538-patch/es-app/src/main.cpp
--- emulationstation-76c1538/es-app/src/main.cpp	2016-05-10 01:45:23.000000000 +0300
+++ emulationstation-76c1538-patch/es-app/src/main.cpp	2016-07-24 13:47:26.000000000 +0300
@@ -282,6 +282,7 @@ int main(int argc, char* argv[])
 			"QUIT", [] { 
 				SDL_Event* quit = new SDL_Event();
 				quit->type = SDL_QUIT;
+				runSystemCommand("systemctl start kodi.service");
 				SDL_PushEvent(quit);
 			}));
 	}
diff -Naurp emulationstation-76c1538/es-core/src/platform.cpp emulationstation-76c1538-patch/es-core/src/platform.cpp
--- emulationstation-76c1538/es-core/src/platform.cpp	2016-05-10 01:45:23.000000000 +0300
+++ emulationstation-76c1538-patch/es-core/src/platform.cpp	2016-07-24 13:50:19.000000000 +0300
@@ -82,26 +82,12 @@ std::string getHomePath()
 
 int runShutdownCommand()
 {
-#if defined(WIN32)
-	return system("shutdown -s -t 0");
-#elif defined(__linux__)
-	sync();
-	return reboot(RB_POWER_OFF);
-#else
-	return system("sudo shutdown -h now");
-#endif
+	return system("systemctl poweroff");
 }
 
 int runRestartCommand()
 {
-#if defined(WIN32)
-	return system("shutdown -r -t 0");
-#elif defined(__linux__)
-	sync();
-	return reboot(RB_AUTOBOOT);
-#else
-	return system("sudo shutdown -r now");
-#endif
+	return system("systemctl reboot");
 }
 
 int runSystemCommand(const std::string& cmd_utf8)
